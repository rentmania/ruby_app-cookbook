upstream <%= @app_name %> {
  server unix:<%= @app_shared %>/tmp/sockets/unicorn.socket  fail_timeout=0;
}
<% if @has_ssl %>
server {
  listen 80;
  server_name <%= @domains.join ' ' %>;
  return 301 https://$host$request_uri;
}
<% end %>

<% if @www_redirect %>
server {
  <% if @has_ssl %>
  listen 443 ssl;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;
  ssl_certificate     /etc/nginx/ssl/rentmania.org.2017.bundle.crt;
  ssl_certificate_key /etc/nginx/ssl/rentmania.org.2017.key;
  <% else %>
  listen <%= @port || '80' %>;
  <% end %>

  server_name ~^www\.(.+)$;
  return 301 $scheme://$1$request_uri;
}
<% end %>


server {
  <% if @has_ssl %>
  listen 443 ssl;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;
  ssl_certificate     /etc/nginx/ssl/rentmania.org.2017.bundle.crt;
  ssl_certificate_key /etc/nginx/ssl/rentmania.org.2017.key;
  <% else %>
  listen <%= @port || '80' %>;
  <% end %>

  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_http_version 1.1;
  gzip_comp_level 5;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

  server_name <%= @domains.join ' ' %>;
  root        <%= @app_root %>/current/public;


  try_files $uri/index.html $uri @app;

  location @app {
    <% if @prerender_ip %>
    set $prerender 0;
    if ($args ~ "_escaped_fragment_") {
      set $prerender 1;
    }
    if ( $remote_addr ~* <%= @prerender_ip %> ) {
      set $prerender 0;
    }
    if ($prerender = 1) {
      #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
      set $prerender "<%= "#{@prerender_ip}:#{@prerender_port}" %>";
      rewrite .* /$scheme://$host$request_uri? break;
      proxy_pass http://$prerender;
    }
    if ($prerender = 0) {
      proxy_pass http://<%= @app_name %>;
    }
    <% else %>
    proxy_pass http://<%= @app_name %>;
    <% end %>
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }

#    error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}
